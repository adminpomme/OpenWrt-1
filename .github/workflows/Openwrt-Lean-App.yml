#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Openwrt-Lean-App

on: 
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - '.github/workflows/Openwrt-Lean-App.yml'
  #schedule:
  #  - cron: 0 2 * * *
  #watch:
  #  types: started

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  PPPOE_USERNAME: ${{ secrets.PPPOE_USERNAME }}
  PPPOE_PASSWD: ${{ secrets.PPPOE_PASSWD }}
  SCKEY: ${{ secrets.SCKEY }}
  PAT: ${{ secrets.PAT }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: Ubuntu-20.04
    
    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
        
    steps:
    - name: Checkout
      uses: actions/checkout@main
  
    - name: Load Settings.ini
      run: |
        source "${GITHUB_WORKSPACE}/App/settings.ini"
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
        echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        echo "ADD_SH=${ADD_SH}" >> $GITHUB_ENV
        echo "FREE_UP_DISK=${FREE_UP_DISK}" >> $GITHUB_ENV
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig wget rename
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
        df -h
    
    - name: Get current date
      id: date
      run: |
        echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
    
    - name: Clone source code
      run: |
        wget https://downloads.openwrt.org/releases/18.06.2/targets/x86/64/openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar.xz
        tar -xf openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar.xz
        
    - name: Free up disk space
      if: env.FREE_UP_DISK == 'false'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/staging_dir
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/staging_dir openwrt/staging_dir
    
    - name: Load && Update feeds
      run: |
        cp -rf App/* openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64/
        cd openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64
        ./scripts/feeds update -a
    
    - name: Load custom configuration
      run: |
        cp -rf Lean/common.config openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64/
        cd openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64
        chmod +x common.config
        /bin/bash "common.config"
        mv $CONFIG_FILE .config
        echo >> .config
        cat ${{matrix.target}}.config >> .config

    - name: Download package
      id: package
      run: |
        cd openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64
        make defconfig
        cat .config
        # make menuconfig
        # make kernel_menuconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
    - name: Compile the App
      id: compile
      run: |
        cd openwrt-sdk-18.06.2-x86-64_gcc-7.3.0_musl.Linux-x86_64
        make package/openwrt-packages/luci-app-passwall/compile V=s
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    - name: Organize files
      id: organize
      run: |
        mkdir ipk-package && find openwrt/bin/packages/*/*/ -maxdepth 1 \
        -name "*.ipk" \
        | xargs -i mv -f {} ./ipk-package/
        cd ipk-package
        echo "IPK-PACKAGE=$PWD" >> $GITHUB_ENV
    
    - name: Upload ipk-package for artifact
      uses: actions/upload-artifact@main
      continue-on-error: true
      if: env.UPLOAD_IPK_FOR_ARTIFACT == 'true'
      with:
        name: ${{ env.date3 }} ${{matrix.target}} IPK
        path: |
          ${{ env.IPK-PACKAGE }}/
    
    - name: WeChat notification
      continue-on-error: true
      if: env.SCKEY
      run: |
        curl https://sc.ftqq.com/${{ secrets.SCKEY }}.send?text=App_${{ env.date3 }}_${{matrix.target}}_Lean编译完成
    
    - name: Telegram notification
      if: env.TELEGRAM_TOKEN && ! contains(github.event.action, 'notg')
      continue-on-error: true
      run: |
        curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=App_${{ env.date3 }}_${{matrix.target}}_Lean编译完成😋  ${{ env.COWURL }}   ${{ env.WETRANS }} 🚀" "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage"
    
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        token: ${{ secrets.PAT }}
        retain_days: 15
        keep_minimum_runs: 1
