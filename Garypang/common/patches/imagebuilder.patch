--- a/target/imagebuilder/Makefile
+++ b/target/imagebuilder/Makefile
@@ -40,11 +40,9 @@ $(BIN_DIR)/$(IB_NAME).tar.xz: clean
 		$(TMP_DIR)/.packageinfo \
 		$(PKG_BUILD_DIR)/
 
-ifeq ($(CONFIG_IB_STANDALONE),)
 	echo '## Remote package repositories' >> $(PKG_BUILD_DIR)/repositories.conf
 	$(call FeedSourcesAppend,$(PKG_BUILD_DIR)/repositories.conf)
 	$(VERSION_SED_SCRIPT) $(PKG_BUILD_DIR)/repositories.conf
-endif
 
 	$(INSTALL_DIR) $(PKG_BUILD_DIR)/packages
 	# create an empty package index so `opkg` doesn't report an error

--- a/target/imagebuilder/files/Makefile
+++ b/target/imagebuilder/files/Makefile
@@ -113,6 +113,16 @@ BUILD_PACKAGES:=$(filter-out $(filter -%,$(BUILD_PACKAGES)) $(patsubst -%,%,$(fi
 PACKAGES:=
 
 _call_image: staging_dir/host/.prereq-build
+	DATE="`date +'%m.%d.%Y'`"; \
+	VERSION="`echo "$$DATE" | cut -f 1-2 -d .`"; \
+	mkdir -p $(USER_FILES)/etc/uci-defaults || true; \
+	echo -e " \
+	sed -i \"s/DISTRIB_REVISION=.*/DISTRIB_REVISION='$$DATE'/\" /etc/openwrt_release \n \
+	sed -i \"s/DISTRIB_DESCRIPTION=.*/DISTRIB_DESCRIPTION=\"OpenWrt 定制版 $$DATE by Kiddin'\"/\" /etc/openwrt_release \n \
+	sed -i \"s/DISTRIB_ID=.*/DISTRIB_ID='$(PARTSIZE)'/\" /etc/openwrt_release \n \
+	echo \"$$DATE\" >/etc/openwrt_version \n \
+	sed -i \"s/OpenWrt .*/OpenWrt $$VERSION by Kiddin'/\" /etc/banner \n \
+	"> $(USER_FILES)/etc/uci-defaults/99-version; \
 	echo 'Building images for $(BOARD)$(if $($(USER_PROFILE)_NAME), - $($(USER_PROFILE)_NAME))'
 	echo 'Packages: $(BUILD_PACKAGES)'
 	echo
@@ -124,6 +134,7 @@ _call_image: staging_dir/host/.prereq-build
 	$(MAKE) -s build_image
 	$(MAKE) -s json_overview_image_info
 	$(MAKE) -s checksum
+	rm -rf $(KERNEL_BUILD_DIR)/tmp/*$(EXTRA_IMAGE_NAME)*
 
 _call_manifest: FORCE
 	rm -rf $(TARGET_DIR)
@@ -164,7 +175,14 @@ package_install: FORCE
 	@echo Installing packages...
 	$(OPKG) install $(firstword $(wildcard $(LINUX_DIR)/libc_*.ipk $(PACKAGE_DIR)/libc_*.ipk))
 	$(OPKG) install $(firstword $(wildcard $(LINUX_DIR)/kernel_*.ipk $(PACKAGE_DIR)/kernel_*.ipk))
-	$(OPKG) install $(BUILD_PACKAGES)
+	packages="$(BUILD_PACKAGES) luci-i18n-base-zh-cn luci-i18n-base-en"; \
+	for p in $(BUILD_PACKAGES); do \
+		if [[ $$p == luci-app-* && "`$(OPKG) list | grep luci-i18n-\`echo $$p | cut -d - -f 3-\`-zh-cn`" ]]; then \
+			packages="$$packages luci-i18n-`echo $$p | cut -d - -f 3-`-zh-cn"; \
+		fi \
+	done; \
+	$(OPKG) install --force-overwrite --force-checksum --force-depends --force-maintainer $$packages
+	$(OPKG) install --force-overwrite --force-checksum --force-depends --force-maintainer --force-reinstall my-default-settings
 
 prepare_rootfs: FORCE
 	@echo
@@ -183,7 +201,10 @@ build_image: FORCE
 	@echo
 	@echo Building images...
 	rm -rf $(BUILD_DIR)/json_info_files/
-	$(NO_TRACE_MAKE) -C target/linux/$(BOARD)/image install TARGET_BUILD=1 IB=1 EXTRA_IMAGE_NAME="$(EXTRA_IMAGE_NAME)" \
+	if [ "$(PARTSIZE)" -ge 100 2>/dev/null ] ; then \
+			ROOT_PARTSIZE="$(PARTSIZE)"; \
+	fi; \
+	$(NO_TRACE_MAKE) -C target/linux/$(BOARD)/image install TARGET_BUILD=1 IB=1 EXTRA_IMAGE_NAME="$(EXTRA_IMAGE_NAME)" PARTSIZE="$$ROOT_PARTSIZE" \
 		$(if $(USER_PROFILE),PROFILE="$(USER_PROFILE)")
 
 $(BIN_DIR)/profiles.json: FORCE
